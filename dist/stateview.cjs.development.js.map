{"version":3,"file":"stateview.cjs.development.js","sources":["../src/debug.ts","../src/utils.ts","../src/context.ts","../src/state.ts","../src/stateview.tsx","../src/layer.tsx"],"sourcesContent":["\nimport IDebug from \"debug\";\n\nexport const Debug = (content: any) => {\n   return IDebug(content)\n}\n","\nexport const getQueryStringByName = (name: String) => {\n    var result = location.search.match(new RegExp(\"[\\?\\&]\" + name + \"=([^\\&]+)\", \"i\"));\n    if (result == null || result.length < 1) {\n        return \"\";\n    }\n    return result[1];\n}\n","import { createContext, useContext } from \"react\"\n\nexport type GlobalStateContent = {\n  stateContent: Object,\n  stateview: any,\n  setStateview: (c: any) => void\n}\n\nexport const StateContext = createContext<GlobalStateContent>({\n  stateContent: {}, // set a default value\n  stateview: null,\n  setStateview: () => { },\n})\n\nexport const useStateContext = () => useContext(StateContext)\n","import type { ICconfig, IState } from './type';\nimport { Debug } from './debug';\n\nconst debug = Debug(\"src/state.ts\")\n// 获取对象\n//  1. React.Children.forEach(statview.props.children）\n//       注册状态和Layer，statview-ref\n//  2. 实现statview的行为\n//       stateview.setCurrent(this | 'somepath')\n//       stateview.keyframes(from , to)\n//       ...\n//  3. 通过useStateContext，可以在Layer中使用\n// \n// 示例如下:\n// \n// function Welcome(props: any) {\n//     const { stateContent, stateview } = useStateContext()\n//     console.dir(\"Welcome\")\n//     console.dir(stateContent)\n// \n//     // stateview.setCurrent(this | 'somepath')\n//     // stateview.keyframes(from , to)\n// \n//     return <h1>Hello, { props.name } < /h1>;\n// }\n//  \nexport const SState = (config: ICconfig) => {\n    // 处理配置项\n    const states = Object.keys(config.GlobalStateMapping)\n\n    // 对外行为\n    return Object.assign(config, {\n        _vshow: function (path: string, c: any) {\n            let state = this._getStateBy(path);\n            var setVisibaleComponent = state.show\n            setVisibaleComponent(c)\n        },\n        _setCurrent(path: string) {\n            config.GlobalStateMapping.currentState = path\n        },\n        _getStateBy(path: string) {\n            let state = config.GlobalStateMapping[path] as IState;\n            return state\n        },\n        /**\n         * 根据path，显示path对应的Layer\n         */\n        show: function (path: string) {\n            let state = this._getStateBy(path);\n            // 如果状态一样，则无需刷新\n            if (path === config.GlobalStateMapping.currentState) {\n                console.warn(\"状态一样，无需刷新\")\n                return\n            }\n            // 确保状态在states中，完成show切换\n            if (states.indexOf(path) !== -1) {\n                // TODO：根据path，获得该path归属的stateview\n                // 状态嵌套\n                debug(path)\n\n                // 根据状态获取视图\n                let visibaleComponent = state.component\n\n                // 设置stateview渲染view\n                this._vshow(path, visibaleComponent)\n\n                // 设置当前的状态\n                this._setCurrent(path)\n            } else {\n                console.warn(\"setCurrent()参数中的\" + path + \" 状态不在stateview中[\" + states.join('/') + \"]\")\n            }\n        }\n    })\n}\n\n\n","import React, { useEffect, useState, useRef } from 'react';\nimport { Debug } from './debug';\nimport { getQueryStringByName } from './utils';\nimport { GlobalStateContent, StateContext } from './context';\nimport { SState } from './state';\n\nimport type { ICconfig } from './type';\nimport styles from './stateview.less';\n\nconst debug = Debug(\"stateview.jsx\")\n\nvar count: number = 0;\nvar GlobalStateMapping: any = {}\n\nexport function Stateview(props: any) {\n    const [visibaleComponent, setVisibaleComponent] = useState(0);\n    // const states = getStates(props.children); \n    let states: any = []\n    // states.for()\n    React.Children.forEach(props.children, child => {\n        // const childType = { ...child.type }\n        debug(child)\n        // console.log(child.name)\n        debug(child.props.router)\n        states.push(child.props.router)\n\n        GlobalStateMapping[child.props.router] = {\n            show: setVisibaleComponent,\n            child: child,\n            component: child.props.component\n        }\n    })\n\n    const stateviewRef = useRef(null);\n\n    if (count === 0) {\n        GlobalStateMapping.currentState = props.default\n    }\n\n    const sState = SState({\n        ref: stateviewRef,\n        GlobalStateMapping: GlobalStateMapping\n    } as ICconfig)\n\n    debug(count++)\n    debug(sState)\n\n    const ctx = {\n        stateContent: props.children,\n        stateview: sState\n    } as GlobalStateContent;\n\n    useEffect(() => {\n        // show default\n        const d = GlobalStateMapping[props.default]\n        d.show(d.component)\n    }, [])\n\n    let i = getQueryStringByName('s')\n    debug(props.children[i])\n\n    return (\n        <StateContext.Provider value={ctx} >\n            <div ref={stateviewRef} className={styles.example} style={{ height: props.height }}>\n                {visibaleComponent}\n            </div>\n        </StateContext.Provider>\n    );\n}\n","import React, { Fragment } from 'react';\n\ninterface LayerProps {\n    key: string;\n    component: any;\n}\n\nexport function Layer(props: LayerProps) {\n    return <Fragment>{props.component}</Fragment>;\n}\n"],"names":["Debug","content","IDebug","getQueryStringByName","name","result","location","search","match","RegExp","length","StateContext","createContext","stateContent","stateview","setStateview","useStateContext","useContext","debug","SState","config","states","Object","keys","GlobalStateMapping","assign","_vshow","path","c","state","_getStateBy","setVisibaleComponent","show","_setCurrent","currentState","console","warn","indexOf","visibaleComponent","component","join","count","Stateview","props","useState","React","Children","forEach","children","child","router","stateviewRef","useRef","sState","ref","ctx","useEffect","d","i","Provider","value","className","styles","example","style","height","Layer","Fragment"],"mappings":"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"}