{"version":3,"file":"stateview.cjs.production.min.js","sources":["../src/debug.ts","../src/context.ts","../src/state.ts","../src/stateview.tsx","../src/layer.tsx","../src/utils.ts"],"sourcesContent":["\nimport IDebug from \"debug\";\n\nexport const Debug = (content: any) => {\n   return IDebug(content)\n}\n","import { createContext, useContext } from \"react\"\n\nexport type GlobalStateContent = {\n  stateContent: Object,\n  stateview: any,\n  setStateview: (c: any) => void\n}\n\nexport const StateContext = createContext<GlobalStateContent>({\n  stateContent: {}, // set a default value\n  stateview: null,\n  setStateview: () => { },\n})\n\nexport const useStateContext = () => useContext(StateContext)\n","import type { ICconfig, IState } from './type';\nimport { Debug } from './debug';\n\nconst debug = Debug(\"src/state.ts\")\n// 获取对象\n//  1. React.Children.forEach(statview.props.children）\n//       注册状态和Layer，statview-ref\n//  2. 实现statview的行为\n//       stateview.setCurrent(this | 'somepath')\n//       stateview.keyframes(from , to)\n//       ...\n//  3. 通过useStateContext，可以在Layer中使用\n// \n// 示例如下:\n// \n// function Welcome(props: any) {\n//     const { stateContent, stateview } = useStateContext()\n//     console.dir(\"Welcome\")\n//     console.dir(stateContent)\n// \n//     // stateview.setCurrent(this | 'somepath')\n//     // stateview.keyframes(from , to)\n// \n//     return <h1>Hello, { props.name } < /h1>;\n// }\n//  \nexport const SState = (config: ICconfig) => {\n    // 处理配置项\n    const states = Object.keys(config.GlobalStateMapping)\n\n    // 对外行为\n    return Object.assign(config, {\n        _vshow: function (path: string, c: any) {\n            let state = this._getStateBy(path);\n            var setVisibaleComponent = state.show\n            setVisibaleComponent(c)\n        },\n        _setCurrent(path: string) {\n            config.GlobalStateMapping.currentState = path\n        },\n        _getStateBy(path: string) {\n            let state = config.GlobalStateMapping[path] as IState;\n            return state\n        },\n        /**\n         * 根据path，显示path对应的Layer\n         */\n        show: function (path: string) {\n            let state = this._getStateBy(path);\n            // 如果状态一样，则无需刷新\n            if (path === config.GlobalStateMapping.currentState) {\n                console.warn(\"状态一样，无需刷新\")\n                return\n            }\n            // 确保状态在states中，完成show切换\n            if (states.indexOf(path) !== -1) {\n                // TODO：根据path，获得该path归属的stateview\n                // 状态嵌套\n                debug(path)\n\n                // 根据状态获取视图\n                let visibaleComponent = state.component\n\n                // 设置stateview渲染view\n                this._vshow(path, visibaleComponent)\n\n                // 设置当前的状态\n                this._setCurrent(path)\n            } else {\n                console.warn(\"setCurrent()参数中的\" + path + \" 状态不在stateview中[\" + states.join('/') + \"]\")\n            }\n        }\n    })\n}\n\n\n","import React, { useEffect, useState, useRef } from 'react';\nimport { Debug } from './debug';\nimport { getQueryStringByName } from './utils';\nimport { GlobalStateContent, StateContext } from './context';\nimport { SState } from './state';\n\nimport type { ICconfig } from './type';\nimport styles from './stateview.less';\n\nconst debug = Debug(\"stateview.jsx\")\n\nvar count: number = 0;\nvar GlobalStateMapping: any = {}\n\nexport function Stateview(props: any) {\n    const [visibaleComponent, setVisibaleComponent] = useState(0);\n    // const states = getStates(props.children); \n    let states: any = []\n    // states.for()\n    React.Children.forEach(props.children, child => {\n        // const childType = { ...child.type }\n        debug(child)\n        // console.log(child.name)\n        debug(child.props.router)\n        states.push(child.props.router)\n\n        GlobalStateMapping[child.props.router] = {\n            show: setVisibaleComponent,\n            child: child,\n            component: child.props.component\n        }\n    })\n\n    const stateviewRef = useRef(null);\n\n    if (count === 0) {\n        GlobalStateMapping.currentState = props.default\n    }\n\n    const sState = SState({\n        ref: stateviewRef,\n        GlobalStateMapping: GlobalStateMapping\n    } as ICconfig)\n\n    debug(count++)\n    debug(sState)\n\n    const ctx = {\n        stateContent: props.children,\n        stateview: sState\n    } as GlobalStateContent;\n\n    useEffect(() => {\n        // show default\n        const d = GlobalStateMapping[props.default]\n        d.show(d.component)\n    }, [])\n\n    let i = getQueryStringByName('s')\n    debug(props.children[i])\n\n    return (\n        <StateContext.Provider value={ctx} >\n            <div ref={stateviewRef} className={styles.example} style={{ height: props.height }}>\n                {visibaleComponent}\n            </div>\n        </StateContext.Provider>\n    );\n}\n","import React, { Fragment } from 'react';\n\ninterface LayerProps {\n    key: string;\n    component: any;\n}\n\nexport function Layer(props: LayerProps) {\n    return <Fragment>{props.component}</Fragment>;\n}\n","\nexport const getQueryStringByName = (name: String) => {\n    var result = location.search.match(new RegExp(\"[\\?\\&]\" + name + \"=([^\\&]+)\", \"i\"));\n    if (result == null || result.length < 1) {\n        return \"\";\n    }\n    return result[1];\n}\n"],"names":["Debug","content","IDebug","StateContext","createContext","stateContent","stateview","setStateview","debug","SState","config","states","Object","keys","GlobalStateMapping","assign","_vshow","path","c","setVisibaleComponent","this","_getStateBy","show","_setCurrent","currentState","state","indexOf","component","console","warn","join","count","props","React","Fragment","useState","visibaleComponent","Children","forEach","children","child","router","stateviewRef","useRef","sState","ref","ctx","useEffect","d","result","i","location","search","match","RegExp","length","Provider","value","className","example","style","height","useContext"],"mappings":"uIAGaA,EAAQ,SAACC,UACZC,EAAOD,ICIJE,EAAeC,gBAAkC,CAC5DC,aAAc,GACdC,UAAW,KACXC,aAAc,eCRVC,EAAQR,EAAM,gBAuBPS,EAAS,SAACC,OAEbC,EAASC,OAAOC,KAAKH,EAAOI,2BAG3BF,OAAOG,OAAOL,EAAQ,CACzBM,OAAQ,SAAUC,EAAcC,IAG5BC,EAFYC,KAAKC,YAAYJ,GACIK,MACZJ,IAEzBK,qBAAYN,GACRP,EAAOI,mBAAmBU,aAAeP,GAE7CI,qBAAYJ,UACIP,EAAOI,mBAAmBG,IAM1CK,KAAM,SAAUL,OACRQ,EAAQL,KAAKC,YAAYJ,GAEzBA,IAASP,EAAOI,mBAAmBU,cAKT,IAA1Bb,EAAOe,QAAQT,IAGfT,EAAMS,QAMDD,OAAOC,EAHYQ,EAAME,gBAMzBJ,YAAYN,IAEjBW,QAAQC,KAAK,mBAAqBZ,EAAO,mBAAqBN,EAAOmB,KAAK,KAAO,KAlBjFF,QAAQC,KAAK,iBC1CvBrB,EAAQR,EAAM,iBAEhB+B,EAAgB,EAChBjB,EAA0B,0CCLRkB,UACXC,gBAACC,gBAAUF,EAAML,+EDMFK,SAC4BG,WAAS,GAApDC,OAAmBjB,OAI1Bc,EAAMI,SAASC,QAAQN,EAAMO,UAAU,SAAAC,GAEnChC,EAAMgC,GAENhC,EAAMgC,EAAMR,MAAMS,QAGlB3B,EAAmB0B,EAAMR,MAAMS,QAAU,CACrCnB,KAAMH,EACNqB,MAAOA,EACPb,UAAWa,EAAMR,MAAML,kBAIzBe,EAAeC,SAAO,MAEd,IAAVZ,IACAjB,EAAmBU,aAAeQ,eAGhCY,EAASnC,EAAO,CAClBoC,IAAKH,EACL5B,mBAAoBA,IAGxBN,EAAMuB,KACNvB,EAAMoC,OAEAE,EAAM,CACRzC,aAAc2B,EAAMO,SACpBjC,UAAWsC,GAGfG,aAAU,eAEAC,EAAIlC,EAAmBkB,WAC7BgB,EAAE1B,KAAK0B,EAAErB,aACV,QEtDCsB,EFwDAC,EEvDU,OADVD,EAASE,SAASC,OAAOC,MAAM,IAAIC,OAAO,gBAA+B,QACvDL,EAAOM,OAAS,EAC3B,GAEJN,EAAO,UFqDdzC,EAAMwB,EAAMO,SAASW,IAGjBjB,gBAAC9B,EAAaqD,UAASC,MAAOX,GAC1Bb,uBAAKY,IAAKH,EAAcgB,yGAAkBC,QAASC,MAAO,CAAEC,OAAQ7B,EAAM6B,SACrEzB,6BFlDc,kBAAM0B,aAAW3D"}